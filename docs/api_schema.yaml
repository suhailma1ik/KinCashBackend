openapi: 3.0.3
info:
  title: H.E.L.P Backend API
  version: 1.0.0
  description: API documentation for the H.E.L.P Backend
paths:
  /api/loan/accept_loan/:
    post:
      operationId: loan_accept_loan_create
      description: Accept a loan.
      tags:
      - loan
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/loan/create_loan/:
    post:
      operationId: loan_create_loan_create
      description: |-
        API view for creating a loan.

        Creates a new loan between a lender and a borrower.
      tags:
      - loan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoanCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoanCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanCreate'
          description: ''
  /api/loan/get_loans/:
    get:
      operationId: loan_get_loans_retrieve
      description: Get loans associated with the authenticated user.
      tags:
      - loan
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/loan/get_loans_by_id/:
    get:
      operationId: loan_get_loans_by_id_retrieve
      description: Override get method to use list method.
      tags:
      - loan
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepaymentSchedule'
          description: ''
  /api/loan/get_transactions_done/:
    get:
      operationId: loan_get_transactions_done_retrieve
      description: Get loans associated with the authenticated user.
      tags:
      - loan
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/loan/get_user_payments/:
    get:
      operationId: loan_get_user_payments_retrieve
      description: Get all payments related to the authenticated user.
      tags:
      - loan
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/loan/pay_emi/:
    post:
      operationId: loan_pay_emi_create
      description: Pay a specific EMI.
      tags:
      - loan
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/notifications/create/:
    post:
      operationId: notifications_create_create
      description: |-
        API view for creating a notification.

        Creates a new notification for a recipient.
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCreate'
          description: ''
  /api/notifications/list/:
    get:
      operationId: notifications_list_list
      description: |-
        API view for listing notifications.

        Returns all notifications for the authenticated user.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/notifications/mark_all_read/:
    post:
      operationId: notifications_mark_all_read_create
      description: Mark all notifications as read.
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/notifications/mark_read/:
    post:
      operationId: notifications_mark_read_create
      description: Mark a notification as read.
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/notifications/unread/:
    get:
      operationId: notifications_unread_list
      description: |-
        API view for listing unread notifications.

        Returns all unread notifications for the authenticated user.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/payments/:
    get:
      operationId: payments_list
      description: List all payments.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: payments_create
      description: Create a new payment.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCreate'
          description: ''
  /api/payments/{id}/:
    get:
      operationId: payments_retrieve
      description: Retrieve a specific payment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: payments_update
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: payments_partial_update
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: payments_destroy
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/user/get-user/:
    get:
      operationId: user_get_user_retrieve
      description: |-
        API view for retrieving user details.

        Returns the authenticated user's details or a specified user's details.
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/get-user-details/:
    get:
      operationId: user_get_user_details_retrieve
      description: Retrieve user details by phone number.
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user/google-auth/:
    post:
      operationId: user_google_auth_create
      description: Authenticate a user with Google OAuth.
      tags:
      - user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/login/:
    post:
      operationId: user_login_create
      description: Authenticate a user and return JWT tokens.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/user/logout/:
    post:
      operationId: user_logout_create
      description: Blacklist the refresh token.
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user/password-reset/confirm/:
    post:
      operationId: user_password_reset_confirm_create
      description: Verify the OTP and reset the user's password.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/user/password-reset/request/:
    post:
      operationId: user_password_reset_request_create
      description: Send an OTP to the user's email or phone number.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/user/signup/:
    post:
      operationId: user_signup_create
      description: |-
        API view for user registration.

        Creates a new user and returns JWT tokens.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/user/token/refresh/:
    post:
      operationId: user_token_refresh_create
      description: Refresh the access token.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/update_profile/:
    put:
      operationId: user_update_profile_update
      description: |-
        API view for updating user profile.

        Updates the authenticated user's profile information.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
    patch:
      operationId: user_update_profile_partial_update
      description: |-
        API view for updating user profile.

        Updates the authenticated user's profile information.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
  /api/user/verify-otp/:
    post:
      operationId: user_verify_otp_create
      description: Verify the OTP.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPVerification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerification'
          description: ''
  /api/v1/loan/accept_loan/:
    post:
      operationId: v1_loan_accept_loan_create
      description: Accept a loan.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/loan/create_loan/:
    post:
      operationId: v1_loan_create_loan_create
      description: |-
        API view for creating a loan.

        Creates a new loan between a lender and a borrower.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoanCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoanCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanCreate'
          description: ''
  /api/v1/loan/get_loans/:
    get:
      operationId: v1_loan_get_loans_retrieve
      description: Get loans associated with the authenticated user.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/loan/get_loans_by_id/:
    get:
      operationId: v1_loan_get_loans_by_id_retrieve
      description: Override get method to use list method.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepaymentSchedule'
          description: ''
  /api/v1/loan/get_transactions_done/:
    get:
      operationId: v1_loan_get_transactions_done_retrieve
      description: Get loans associated with the authenticated user.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/loan/get_user_payments/:
    get:
      operationId: v1_loan_get_user_payments_retrieve
      description: Get all payments related to the authenticated user.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/loan/pay_emi/:
    post:
      operationId: v1_loan_pay_emi_create
      description: Pay a specific EMI.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/notifications/create/:
    post:
      operationId: v1_notifications_create_create
      description: |-
        API view for creating a notification.

        Creates a new notification for a recipient.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCreate'
          description: ''
  /api/v1/notifications/list/:
    get:
      operationId: v1_notifications_list_list
      description: |-
        API view for listing notifications.

        Returns all notifications for the authenticated user.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/notifications/mark_all_read/:
    post:
      operationId: v1_notifications_mark_all_read_create
      description: Mark all notifications as read.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/notifications/mark_read/:
    post:
      operationId: v1_notifications_mark_read_create
      description: Mark a notification as read.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/notifications/unread/:
    get:
      operationId: v1_notifications_unread_list
      description: |-
        API view for listing unread notifications.

        Returns all unread notifications for the authenticated user.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/payments/:
    get:
      operationId: v1_payments_list
      description: List all payments.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: v1_payments_create
      description: Create a new payment.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCreate'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: v1_payments_retrieve
      description: Retrieve a specific payment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: v1_payments_update
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: v1_payments_partial_update
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: v1_payments_destroy
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Payment.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/get-user/:
    get:
      operationId: v1_user_get_user_retrieve
      description: |-
        API view for retrieving user details.

        Returns the authenticated user's details or a specified user's details.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/user/get-user-details/:
    get:
      operationId: v1_user_get_user_details_retrieve
      description: Retrieve user details by phone number.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/google-auth/:
    post:
      operationId: v1_user_google_auth_create
      description: Authenticate a user with Google OAuth.
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/login/:
    post:
      operationId: v1_user_login_create
      description: Authenticate a user and return JWT tokens.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v1/user/logout/:
    post:
      operationId: v1_user_logout_create
      description: Blacklist the refresh token.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/password-reset/confirm/:
    post:
      operationId: v1_user_password_reset_confirm_create
      description: Verify the OTP and reset the user's password.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/user/password-reset/request/:
    post:
      operationId: v1_user_password_reset_request_create
      description: Send an OTP to the user's email or phone number.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/v1/user/signup/:
    post:
      operationId: v1_user_signup_create
      description: |-
        API view for user registration.

        Creates a new user and returns JWT tokens.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/v1/user/token/refresh/:
    post:
      operationId: v1_user_token_refresh_create
      description: Refresh the access token.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/user/update_profile/:
    put:
      operationId: v1_user_update_profile_update
      description: |-
        API view for updating user profile.

        Updates the authenticated user's profile information.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
    patch:
      operationId: v1_user_update_profile_partial_update
      description: |-
        API view for updating user profile.

        Updates the authenticated user's profile information.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
  /api/v1/user/verify-otp/:
    post:
      operationId: v1_user_verify_otp_create
      description: Verify the OTP.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPVerification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerification'
          description: ''
components:
  schemas:
    EmiCycleEnum:
      enum:
      - WEEKLY
      - MONTHLY
      type: string
      description: |-
        * `WEEKLY` - Weekly
        * `MONTHLY` - Monthly
    KycStatusEnum:
      enum:
      - PENDING
      - VERIFIED
      - REJECTED
      type: string
      description: |-
        * `PENDING` - Pending
        * `VERIFIED` - Verified
        * `REJECTED` - Rejected
    LoanCreate:
      type: object
      description: Serializer for creating a Loan.
      properties:
        lender:
          type: string
          format: uuid
        borrower:
          type: string
          format: uuid
        principal_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        interest_rate_pct:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Interest rate (%)
          description: Annualized interest rate
        term_months:
          type: integer
          title: Term (months)
          description: Total tenure in months
        emi_cycle:
          $ref: '#/components/schemas/EmiCycleEnum'
        late_fee_pct:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          title: Late fee (%)
          description: Percentage of overdue amount per period
        due_date:
          type: integer
          maximum: 31
          minimum: 1
          description: Day of the month for EMI due date (1-31)
        is_lender:
          type: boolean
          description: True if the current user is the lender, false if borrower
      required:
      - borrower
      - due_date
      - interest_rate_pct
      - is_lender
      - lender
      - principal_amount
      - term_months
    Login:
      type: object
      description: |-
        Serializer for user login.

        Accepts a single identifier field that can be either email or phone number,
        along with a required password field.
      properties:
        identifier:
          type: string
          description: Email address or phone number
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 8
      required:
      - identifier
      - password
    Notification:
      type: object
      description: Serializer for Notification model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        loan:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        sender:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        recipient:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        title:
          type: string
          readOnly: true
        body:
          type: string
          readOnly: true
        is_read:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - created_at
      - id
      - is_read
      - loan
      - recipient
      - sender
      - title
    NotificationCreate:
      type: object
      description: Serializer for creating a notification.
      properties:
        recipient_id:
          type: string
          format: uuid
        loan_id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 255
        body:
          type: string
      required:
      - body
      - recipient_id
      - title
    OTPVerification:
      type: object
      description: Serializer for OTP verification.
      properties:
        email:
          type: string
          format: email
        phone_number:
          type: string
        otp:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - otp
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PasswordResetConfirm:
      type: object
      description: Serializer for password reset confirmation.
      properties:
        email:
          type: string
          format: email
        phone_number:
          type: string
        otp:
          type: string
          maxLength: 6
          minLength: 6
        new_password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 8
      required:
      - new_password
      - otp
    PasswordResetRequest:
      type: object
      description: Serializer for password reset request.
      properties:
        email:
          type: string
          format: email
        phone_number:
          type: string
    PatchedPayment:
      type: object
      description: Serializer for the Payment model.
      properties:
        id:
          type: integer
          readOnly: true
        loan:
          type: string
          format: uuid
          description: The loan this payment is associated with
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          description: |-
            Current status of the payment

            * `PENDING` - Pending
            * `COMPLETED` - Completed
            * `FAILED` - Failed
        idempotency_key:
          type: string
          description: Unique key to ensure payment is processed only once
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUpdateProfile:
      type: object
      description: Serializer for updating user profile.
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Payment:
      type: object
      description: Serializer for the Payment model.
      properties:
        id:
          type: integer
          readOnly: true
        loan:
          type: string
          format: uuid
          description: The loan this payment is associated with
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          description: |-
            Current status of the payment

            * `PENDING` - Pending
            * `COMPLETED` - Completed
            * `FAILED` - Failed
        idempotency_key:
          type: string
          description: Unique key to ensure payment is processed only once
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - idempotency_key
      - loan
      - updated_at
      - user
    PaymentCreate:
      type: object
      description: Serializer for creating a Payment.
      properties:
        loan:
          type: string
          format: uuid
          description: The loan this payment is associated with
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        idempotency_key:
          type: string
          description: Unique key to ensure payment is processed only once
          maxLength: 255
      required:
      - amount
      - idempotency_key
      - loan
    PaymentStatusEnum:
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      type: string
      description: |-
        * `PENDING` - Pending
        * `COMPLETED` - Completed
        * `FAILED` - Failed
    Registration:
      type: object
      description: Serializer for user registration.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 8
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - id
      - password
      - phone_number
    RepaymentSchedule:
      type: object
      description: Serializer for RepaymentSchedule model.
      properties:
        id:
          type: integer
          readOnly: true
        loan:
          type: string
          format: uuid
          readOnly: true
        due_date:
          type: string
          format: date
          readOnly: true
        amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
          readOnly: true
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
          readOnly: true
        interest_component:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
          readOnly: true
          description: Portion of amount_due that is interest
        late_fee_accrued:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
          readOnly: true
        paid_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/RepaymentScheduleStatusEnum'
          readOnly: true
        lender:
          type: string
          readOnly: true
        borrower:
          type: string
          readOnly: true
      required:
      - amount_due
      - amount_paid
      - borrower
      - due_date
      - id
      - interest_component
      - late_fee_accrued
      - lender
      - loan
      - paid_at
      - status
    RepaymentScheduleStatusEnum:
      enum:
      - DUE
      - PAID
      - LATE
      type: string
      description: |-
        * `DUE` - Due
        * `PAID` - Paid
        * `LATE` - Late
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UpdateProfile:
      type: object
      description: Serializer for updating user profile.
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    User:
      type: object
      description: Serializer for User model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        kyc_status:
          allOf:
          - $ref: '#/components/schemas/KycStatusEnum'
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - email
      - id
      - kyc_status
      - phone_number
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
